{"version":3,"sources":["file:///F:/bigsinger/Farm/FarmCreator372/assets/ts/soil.ts"],"names":["_decorator","Component","TiledMap","TiledLayer","SpriteAtlas","Vec2","Node","Vec3","UITransform","TiledObjectGroup","Crop","ccclass","property","landStateNothing","landStateVirgin","landStateDry","landStateDryHalf","landStateFatHalf","landStateFat","Soil","onLoad","initLand","gid","soilLayer","getTileGIDAt","layer","layerSize","getLayerSize","initCrops","node","on","EventType","TOUCH_START","onTouchStart","event","clickPos","getLocation","uiTransform","mapNode","getComponent","localClickPos","convertToNodeSpaceAR","x","y","tilePos","getTilePos","console","log","tileSize","getTileSize","getPosition","tileX","Math","floor","height","tileY","row","col","width","setTileGIDAt","addCrop","crop","cropAtlas","getSpriteFrame","setCellPosition","cropUITransform","anchorX","anchorY","addChild","getPositionAt","setPosition","i","j"],"mappings":"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","sourcesContent":["import { _decorator, Component, TiledMap, TiledLayer, SpriteAtlas, Vec2, Node, Vec3, UITransform, Layers, TiledObjectGroup, Sprite, SpriteFrame, } from 'cc';\r\nimport { Crop } from './Crop';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n// 土地的状态标识\r\nconst landStateNothing = 0;\r\nconst landStateVirgin = 1;\r\nconst landStateDry = 2;\r\nconst landStateDryHalf = 3;\r\nconst landStateFatHalf = 4;\r\nconst landStateFat = 5;\r\n\r\n\r\n@ccclass('Soil')\r\nexport default class Soil extends Component {\r\n    @property(TiledMap)\r\n    mapNode: TiledMap = null;\r\n\r\n    @property(TiledLayer)\r\n    soilLayer: TiledLayer = null;\r\n\r\n    @property(TiledObjectGroup)\r\n    cropLayer: TiledObjectGroup = null;\r\n\r\n    @property(SpriteAtlas)\r\n    cropAtlas: SpriteAtlas = null;\r\n\r\n\r\n    onLoad() {\r\n        this.initLand();\r\n        var gid = this.soilLayer.getTileGIDAt(0, 1);\r\n\r\n        let layer: TiledLayer = this.soilLayer;\r\n        let layerSize = layer.getLayerSize();\r\n\r\n        this.initCrops();\r\n\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    onTouchStart(event) {\r\n        // 获取点击位置\r\n        const clickPos = event.getLocation();\r\n        const uiTransform = this.mapNode.node.getComponent(UITransform);\r\n        const localClickPos = uiTransform.convertToNodeSpaceAR(new Vec3(clickPos.x, clickPos.y, 0));\r\n\r\n\r\n        // 将点击位置转换为瓦块坐标\r\n        const tilePos = this.getTilePos(localClickPos);\r\n\r\n        console.log(`点击的瓦块坐标为: (${tilePos.x}, ${tilePos.y})`);\r\n    }\r\n\r\n    getTilePos(localClickPos: Vec3): Vec2 {\r\n        const tileSize = this.mapNode.getTileSize();\r\n        const layerSize = this.soilLayer.getLayerSize();\r\n    \r\n        const x = (localClickPos.x - this.mapNode.node.getPosition().x) / tileSize.x;\r\n        const y = (this.mapNode.node.getPosition().y - localClickPos.y) / tileSize.y;\r\n    \r\n        const tileX = Math.floor((layerSize.height - y + x) / 2);\r\n        const tileY = Math.floor((layerSize.height - y - x) / 2);\r\n    \r\n        return new Vec2(tileX, tileY);\r\n    }\r\n    \r\n    \r\n\r\n    // 初始化植物\r\n    initCrops():void{\r\n        let layerSize = this.soilLayer.getLayerSize();\r\n        for (let row = 0; row < 2; row++) {\r\n            for (let col = 0; col < layerSize.width; col++) {\r\n                this.soilLayer.setTileGIDAt(landStateFat,  col, row,  1);\r\n                this.addCrop(row, col);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 在行列处添加植物\r\n    addCrop(row: number, col: number):void{\r\n        // 创建一个新的精灵节点\r\n        const crop = new Crop(this.cropAtlas.getSpriteFrame('crop_101_04'));  //cc.instantiate(this.spritePrefab);\r\n        crop.setCellPosition(row, col);\r\n\r\n        //设置精灵节点的锚点为中下角\r\n        const cropUITransform = crop.getComponent(UITransform);\r\n        cropUITransform.anchorX = 0.5;\r\n        cropUITransform.anchorY = 0;\r\n\r\n        // 使用修复后的getReleasePos函数设置精灵节点的位置\r\n        //const tilePos = this.soilLayer.getPositionAt(col, row); // 注意该函数的参数顺序是：列，行\r\n        //crop.setPosition(tilePos.x, tilePos.y);\r\n        //this.soilLayer.addUserNode(crop);\r\n        \r\n\r\n        //let tile = this.soilLayer.getTiledTileAt(col, row);\r\n        //tile.node.addComponent(Sprite).spriteFrame = this.cropAtlas.getSpriteFrame('crop_101_04');\r\n        this.soilLayer.node.addChild(crop);\r\n\r\n        \r\n        // 使用修复后的getReleasePos函数设置精灵节点的位置\r\n        const tilePos = this.soilLayer.getPositionAt(col, row); // 注意该函数的参数顺序是：列，行\r\n        crop.setPosition(tilePos.x, tilePos.y);\r\n    }\r\n    \r\n    \r\n    initLand():void{\r\n        let layerSize = this.soilLayer.getLayerSize();\r\n        console.log(\"layersize \", layerSize);\r\n\r\n        for (let i = 0; i < layerSize.width; i++) {\r\n            for (let j = 0; j < layerSize.height; j++) {\r\n                this.soilLayer.setTileGIDAt(landStateNothing, i, j, 0);\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n"]}